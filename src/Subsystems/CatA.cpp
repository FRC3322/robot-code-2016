// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.




#include "CatA.h"
#include "../RobotMap.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

CatA::CatA() : Subsystem("CatA") {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    catA1 = RobotMap::catACatA1;
    catA2 = RobotMap::catACatA2;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}
void CatA::init(){
	catA1->Enable();
	catA2->Enable();
	catA1->SetControlMode(CANTalon::ControlMode::kFollower);
	catA1->Set(11);
	catA1->Set(0);
}
void CatA::chivelDeFrise(){
	catA2->Set(CatA::calculatePID(0,catA1->GetEncPosition(),.02,0,.08));
}
void CatA::portcollisInit(){
	catA2->Set(CatA::calculatePID(0,catA1->GetEncPosition(),.02,0,.08));

}
void CatA::portcollisLift(){
	catA2->Set(CatA::calculatePID(0,catA1->GetEncPosition(),.02,0,.08));
}
double CatA::calculatePID(double setpoint, double current, double Kp, double Ki, double Kd){
	double encoderAngle = (282.5-current)*(3.1415/2)/(182.75);
	f = -.4*cos(encoderAngle);
//	return f;
	double dVal = 0;
	Ki = 0.0000;
	double iVal = previousIVal + (double)setpoint-(double)current;
	printf("IVal %f",iVal);
	if(previous != 0){
		dVal = ((double)current-(double)previous)*Kd;
//		printf("Dval %f",dVal);
	}
	previousIVal = iVal;
	previous = current;
	return (Kp*(setpoint-current) + f)+(iVal*Ki)+-dVal;

}

void CatA::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}


// Put methods for controlling this subsystem
// here. Call these from Commands.

