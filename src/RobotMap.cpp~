// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<CANTalon> RobotMap::drivetraindriveSRX1;
std::shared_ptr<CANTalon> RobotMap::drivetraindriveSRX2;
std::shared_ptr<CANTalon> RobotMap::drivetraindriveSRX3;
std::shared_ptr<CANTalon> RobotMap::drivetraindriveSRX4;
std::shared_ptr<RobotDrive> RobotMap::drivetrainRobotDrive;
std::shared_ptr<CANTalon> RobotMap::shootershooterTalon1;
std::shared_ptr<CANTalon> RobotMap::shootershooterTalon2;
std::shared_ptr<CANTalon> RobotMap::intakeintakeSpinTalon1;
std::shared_ptr<CANTalon> RobotMap::intakeintakeSpinTalon2;
std::shared_ptr<CANTalon> RobotMap::intakeintakeRotateTalon1;
std::shared_ptr<CANTalon> RobotMap::intakeintakeRotateTalon2;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    drivetraindriveSRX1.reset(new CANTalon(0));
    lw->AddActuator("Drivetrain", "driveSRX1", drivetraindriveSRX1);
    
    drivetraindriveSRX2.reset(new CANTalon(1));
    lw->AddActuator("Drivetrain", "driveSRX2", drivetraindriveSRX2);
    
    drivetraindriveSRX3.reset(new CANTalon(2));
    lw->AddActuator("Drivetrain", "driveSRX3", drivetraindriveSRX3);
    
    drivetraindriveSRX4.reset(new CANTalon(3));
    lw->AddActuator("Drivetrain", "driveSRX4", drivetraindriveSRX4);
    
    drivetrainRobotDrive.reset(new RobotDrive(drivetraindriveSRX1, drivetraindriveSRX2,
              drivetraindriveSRX3, drivetraindriveSRX4));
    
    drivetrainRobotDrive->SetSafetyEnabled(true);
        drivetrainRobotDrive->SetExpiration(0.1);
        drivetrainRobotDrive->SetSensitivity(0.5);
        drivetrainRobotDrive->SetMaxOutput(1.0);
        drivetrainRobotDrive->SetInvertedMotor(RobotDrive::kFrontLeftMotor, true);
        drivetrainRobotDrive->SetInvertedMotor(RobotDrive::kRearLeftMotor, true);
    shootershooterTalon1.reset(new CANTalon(4));
    lw->AddActuator("Shooter", "shooterTalon1", shootershooterTalon1);
    
    shootershooterTalon2.reset(new CANTalon(5));
    lw->AddActuator("Shooter", "shooterTalon2", shootershooterTalon2);
    
    intakeintakeSpinTalon1.reset(new CANTalon(6));
    lw->AddActuator("Intake", "intakeSpinTalon1", intakeintakeSpinTalon1);
    
    intakeintakeSpinTalon2.reset(new CANTalon(7));
    lw->AddActuator("Intake", "intakeSpinTalon2", intakeintakeSpinTalon2);
    
    intakeintakeRotateTalon1.reset(new CANTalon(8));
    lw->AddActuator("Intake", "intakeRotateTalon1", intakeintakeRotateTalon1);
    
    intakeintakeRotateTalon2.reset(new CANTalon(9));
    lw->AddActuator("Intake", "intakeRotateTalon2", intakeintakeRotateTalon2);
    


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
